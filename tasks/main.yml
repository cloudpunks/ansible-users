# Standards: 0.1
---
- name: Install required packages
  loop:
    - git
  package:
    name: "{{ item }}"
    state: present
  tags:
    - users

- name: Backup deleted user
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'absent'
    - item.remove | default(False)
  archive:
    path: /home/{{ item.name }}
    dest: "/root/{{ item.name }}_{{ ansible_date_time.iso8601 }}.tar.gz"
    owner: root
    group: root
    mode: u=rw,g=,o=
    remove: True
  tags:
    - users

- name: Create primary group
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'present'
    - item.primary_group is undefined
  group:
    name: "{{ item.name }}"
    gid: "{{ item.uid | default(omit) }}"
    state: present
  tags:
    - users

- name: Create user account
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  user:
    name: "{{ item.name }}"
    uid: "{{ item.uid | default(omit) }}"
    comment: "{{ item.comment | default(omit) }}"
    password: "{{ item.password | default('!') }}"
    group: "{{ item.primary_group | default(item.name) }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    home: "{{ item.home | default('/home/' + item.name) }}"
    groups: "{{ item.groups | default([]) | join(',') }}"
    generate_ssh_key: "{{ item.ssh_key.generate | default(False) }}"
    ssh_key_bits: "{{ item.ssh_key.bits | default(omit) }}"
    ssh_key_comment: "{{ item.ssh_key.comment | default(omit) }}"
    ssh_key_file: "{{ item.ssh_key.file | default(omit) }}"
    ssh_key_passphrase: "{{ item.ssh_key.passphrase | default(omit) }}"
    ssh_key_type: "{{ item.ssh_key.type | default(omit) }}"
    update_password: "{{ item.update_password | default('always') }}"
    remove: "{{ item.remove | default(False) }}"
    append: True
    createhome: True
    state: "{{ item.state | default('present') }}"
  tags:
    - users

- name: Install ohmyzsh repo
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'present'
    - item.ohmyzsh | default(False)
  become: True
  become_user: "{{ item.name }}"
  git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: "{{ item.home | default('/home/' + item.name) }}/.oh-my-zsh"
  tags:
    - users

- name: Install bashit repo
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'present'
    - item.bashit | default(False)
  become: True
  become_user: "{{ item.name }}"
  git:
    repo: https://github.com/Bash-it/bash-it.git
    dest: "{{ item.home | default('/home/' + item.name) }}/.bash_it"
  tags:
    - users

- name: Install homeshick base
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'present'
    - item.castles | default([]) | length > 0
  become: True
  become_user: "{{ item.name }}"
  git:
    repo: https://github.com/andsens/homeshick.git
    dest: "{{ item.home | default('/home/' + item.name) }}/.homesick/repos/homeshick"
  tags:
    - users

- name: Clone homeshick castles
  loop: "{{ (users_general + users_extra) | subelements('castles', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}: {{ item.1 }}"
  when:
    - item.state | default('present') == 'present'
  become: True
  become_user: "{{ item.0.name }}"
  git:
    repo: "https://github.com/{{ item.1.name | default(item.1) }}.git"
    dest: "{{ item.0.home | default('/home/' + item.0.name) }}/.homesick/repos/{{ item.1.name | default(item.1) | basename }}"
    force: "{{ item.1.force | default(users_castles_force) }}"
  tags:
    - users

- name: Link homeshick castles
  loop: "{{ (users_general + users_extra) | subelements('castles', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}: {{ item.1 }}"
  when:
    - item.0.state | default('present') == 'present'
  become: True
  become_user: "{{ item.0.name }}"
  command: "{{ item.0.home | default('/home/' + item.0.name) }}/.homesick/repos/homeshick/bin/homeshick -f -b -q link {{ item.1 | basename }}"
  changed_when: False
  tags:
    - users

- name: Write authorized keys
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}: {{ item.sshkeys | default(['None']) | join(', ') }}"
  when:
    - item.state | default('present') == 'present'
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.sshkeys | join('\n') }}"
    exclusive: True
    state: present
  tags:
    - users

...
