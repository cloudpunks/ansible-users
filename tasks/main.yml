---
- name: Fact install zsh
  ansible.builtin.set_fact:
    users_install_zsh: "{{ (users_general + users_extra) | rejectattr('shell', 'undefined') | selectattr('shell', 'match', '/bin/zsh') | list | length > 0 }}"
  tags:
    - users

- name: Install zsh package
  when: users_install_zsh
  loop: "{{ users_packages_zsh }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - users

- name: Install zsys package
  when: users_zfs_home
  loop: "{{ users_packages_zfs }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - users

- name: Install required packages
  loop: "{{ users_packages_general }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - users

- name: Backup deleted user
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'absent'
    - item.remove | default(False)
  community.general.archive:
    path: /home/{{ item.name }}
    dest: "/root/{{ item.name }}_{{ ansible_date_time.iso8601 }}.tar.gz"
    owner: root
    group: root
    mode: u=rw,g=,o=
    remove: True
  tags:
    - users

- name: Create primary group
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'present'
    - item.primary_group is undefined
  ansible.builtin.group:
    name: "{{ item.name }}"
    gid: "{{ item.uid | default(omit) }}"
    state: present
  tags:
    - users

- name: Create home directory
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - users_zfs_home
    - item.state | default('present') == 'present'
    - item.zfs | default(True)
  ansible.builtin.file:
    path: "{{ item.home | default('/home/' + item.name) }}"
    owner: "{{ item.uid | default('root') }}"
    group: "{{ item.primary_group | default(item.name) }}"
    mode: u=rwx,g=rx,o=
    state: directory
  tags:
    - users

- name: Enable zfs userdata
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - users_zfs_home
    - item.state | default('present') == 'present'
    - item.zfs | default(True)
  register: users_zfs
  changed_when: users_zfs.stderr_lines | length == 0
  failed_when: False
  ansible.builtin.command: "zsysctl userdata create {{ item.name }} {{ item.home | default('/home/' + item.name) }}"
  tags:
    - users

- name: Chown home directory
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - users_zfs_home
    - item.state | default('present') == 'present'
    - item.zfs | default(True)
  ansible.builtin.file:
    path: "{{ item.home | default('/home/' + item.name) }}"
    owner: "{{ item.uid | default('root') }}"
    group: "{{ item.primary_group | default(item.name) }}"
    mode: u=rwx,g=rx,o=
    state: directory
  tags:
    - users

- name: Create user account
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  ansible.builtin.user:
    name: "{{ item.name }}"
    uid: "{{ item.uid | default(omit) }}"
    comment: "{{ item.comment | default(omit) }}"
    password: "{{ item.password | default(omit) }}"
    group: "{{ item.primary_group | default(item.name) }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    home: "{{ item.home | default('/home/' + item.name) }}"
    groups: "{{ item.groups | default([]) | join(',') }}"
    generate_ssh_key: "{{ item.ssh_key.generate | default(False) }}"
    ssh_key_bits: "{{ item.ssh_key.bits | default(omit) }}"
    ssh_key_comment: "{{ item.ssh_key.comment | default(omit) }}"
    ssh_key_file: "{{ item.ssh_key.file | default(omit) }}"
    ssh_key_passphrase: "{{ item.ssh_key.passphrase | default(omit) }}"
    ssh_key_type: "{{ item.ssh_key.type | default(omit) }}"
    update_password: "{{ item.update_password | default('always') }}"
    remove: "{{ item.remove | default(False) }}"
    append: True
    createhome: True
    state: "{{ item.state | default('present') }}"
  tags:
    - users

- name: Install ohmyzsh repo
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'present'
    - item.ohmyzsh | default(False)
  become: True
  become_user: "{{ item.name }}"
  diff: False
  ansible.builtin.git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: "{{ item.home | default('/home/' + item.name) }}/.oh-my-zsh"
    version: "{{ 'HEAD' if users_ohmyzsh_version == 'latest' else users_ohmyzsh_version }}"
  tags:
    - users

- name: Install bashit repo
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'present'
    - item.bashit | default(False)
  become: True
  become_user: "{{ item.name }}"
  diff: False
  ansible.builtin.git:
    repo: https://github.com/Bash-it/bash-it.git
    dest: "{{ item.home | default('/home/' + item.name) }}/.bash_it"
    version: "{{ 'HEAD' if users_bashit_version == 'latest' else users_bashit_version }}"
  tags:
    - users

- name: Install homeshick base
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.state | default('present') == 'present'
    - item.castles | default([]) | length > 0
  become: True
  become_user: "{{ item.name }}"
  diff: False
  ansible.builtin.git:
    repo: https://github.com/andsens/homeshick.git
    dest: "{{ item.home | default('/home/' + item.name) }}/.homesick/repos/homeshick"
    version: "{{ 'HEAD' if users_homeshick_version == 'latest' else users_homeshick_version }}"
  tags:
    - users

- name: Clone homeshick castles
  loop: "{{ (users_general + users_extra) | subelements('castles', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}: {{ item.1 }}"
  when:
    - item.0.state | default('present') == 'present'
  become: True
  become_user: "{{ item.0.name }}"
  diff: False
  ansible.builtin.git:
    repo: "{{ item.1.name | default(item.1) if (item.1.name | default(item.1)).startswith('http') else 'https://github.com/' + item.1.name | default(item.1) }}"
    dest: "{{ item.0.home | default('/home/' + item.0.name) }}/.homesick/repos/{{ item.1.name | default(item.1) | basename }}"
    force: "{{ item.1.force | default(users_castles_force) }}"
    version: "{{ item.1.version | default('HEAD') }}"
  tags:
    - users

- name: Link homeshick castles
  loop: "{{ (users_general + users_extra) | subelements('castles', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}: {{ item.1 }}"
  when:
    - item.0.state | default('present') == 'present'
  become: True
  become_user: "{{ item.0.name }}"
  ansible.builtin.command: "{{ item.0.home | default('/home/' + item.0.name) }}/.homesick/repos/homeshick/bin/homeshick -f -b -q link {{ item.1 | basename }}"
  changed_when: False
  tags:
    - users

- name: Write authorized keys
  loop: "{{ users_general + users_extra }}"
  loop_control:
    label: "{{ item.name }}: {{ item.sshkeys | default(['None']) | join(', ') }}"
  when:
    - item.state | default('present') == 'present'
    - item.sshkeys | default(False)
  ansible.posix.authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.sshkeys | join('\n') }}"
    exclusive: True
    state: present
  tags:
    - users

- name: Write private keys
  loop: "{{ (users_general + users_extra) | subelements('private', skip_missing=True) }}"
  loop_control:
    label: "{{ item.0.name }}: {{ item.1.name | default('id_rsa') }}"
  when:
    - item.0.state | default('present') == 'present'
  ansible.builtin.copy:
    content: "{{ item.1.content }}"
    dest: "{{ item.0.home | default('/home/' + item.0.name) }}/.ssh/{{ item.1.name | default('id_rsa') }}"
    owner: "{{ item.0.name }}"
    group: "{{ item.0.primary_group | default(item.0.name) }}"
    mode: u=rw,g=,o=
  tags:
    - users

- name: Write custom zshenv
  when:
    - users_install_zsh
    - users_override_zshenv
  ansible.builtin.template:
    src: zshenv.j2
    dest: /etc/zsh/zshenv
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - users

...
